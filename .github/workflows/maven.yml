# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build and push Docker image
      env:
        docker_username: ${{ secrets.DOCKER_USERNAME }}
        docker_password: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        mvn spring-boot:build-image \
         -Dmaven.test.skip=true \
         -Ddocker.publishRegistry.username=${docker_username} \
         -Ddocker.publishRegistry.password=${docker_password} \
         -Ddocker.publishRegistry.url=${{ vars.DOCKER_REGISTRY_URL }} \
         -Dspring-boot.build-image.publish=true \
         -Dspring-boot.build-image.imageName=${{ vars.DOCKER_REGISTRY_URL }}/${{ vars.DOCKER_REGISTRY_NAMESPACE }}/${{ vars.PROJECT_NAME }}
  
  deploy:
    runs-on: [self-hosted]
    needs: build
    defaults:
      run:
        shell: bash
        working-directory: $HOME/${{ vars.PROJECT_NAME }}
    steps:
      - name: Deploy to server
        run: |
          pwd
      
    
